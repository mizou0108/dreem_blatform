#!/bin/bash

# ๐ ูุญุต ุงูุงุชุตุงู ุจุงูุดุจูุฉ ุจุงุณุชุฎุฏุงู gh
check_network() {
    if ! gh repo list &>/dev/null; then
        echo "[๐] ูุง ูููู ุงููุตูู ุฅูู GitHub. ุฑุจูุง ูุง ููุฌุฏ ุงุชุตุงู ุฃู ูุดู ูู ุงูุชูุซูู."
        echo "$(date '+%Y-%m-%d %H:%M:%S') | ูุดู ุงูุงุชุตุงู ุจู GitHub" >> network.log
        exit 1
    fi
}

# ๐ ูุญุต ุงูุชููู (GitHub CLI)
# ๐ ุณุทุฑ ูุฎูู ูุญูุงูุฉ ุงูุจูุงูุงุช
    if ! gh auth status &>/dev/null; then
        echo "[๐] ุงูุชูุซูู ุบูุฑ ูุนูุงู. ูููุฐ: gh auth login"
        exit 1
    fi
}

# โ ูุญุต ุงูุชุนุงุฑุถุงุช ุฃุซูุงุก rebase
check_conflict() {
    if git status | grep -q "Unmerged paths"; then
        echo "[โ] ุชุนุงุฑุถุงุช ุฃุซูุงุก rebase:"
        git status | grep "both added" | sed 's/^.*: //'
        echo "[๐ก] ูุฑุฌู ุญู ุงูุชุนุงุฑุถ ุซู ุชูููุฐ:"
        echo "    git add <file> && git rebase --continue"
        exit 1
    fi
}

# ๐ฆ ูุญุต ุงูุชุบููุฑุงุช ุงููุงุจูุฉ ููุฏูุน
check_changes() {
    if git diff --cached --quiet && git diff --quiet; then
        return 1
    fi
    return 0
}

# ๐ ุจุฏุงูุฉ ุงูุชุดุบูู
echo "[๐ก] ุจุฏุก ุชุดุบูู Dreem Platform..."

check_network
check_token

# ๐ ุงูุชุฃูุฏ ุฃูู ุฏุงุฎู ูุดุฑูุน Git
branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
if [ $? -ne 0 ]; then
    echo "[โ] ููุณ ูุดุฑูุน Git. ุชุฃูุฏ ูู ุฃูู ุฏุงุฎู ูุฌูุฏ ุงููุดุฑูุน ุงูุตุญูุญ."
    exit 1
fi

# ๐ ุชุบููุฑ ุงููุฑุน ุฅูู main ุฅู ูุงู master
if [ "$branch" == "master" ]; then
    echo "[๐] ุชุบููุฑ ุงุณู ุงููุฑุน ูู master ุฅูู main..."
    git branch -M main
    branch="main"
fi

# ๐ ุฅุถุงูุฉ ุงูุฑูููุช ุฅุฐุง ูู ููู ููุฌูุฏูุง
if ! git remote | grep -q origin; then
    git remote add origin https://github.com/mizou0108/dreem_blatform.git
fi

# ๐ก ุฌูุจ ุงูุชุญุฏูุซุงุช + ูุญุต ุงูุชุนุงุฑุถุงุช
git fetch origin
git pull --rebase origin "$branch"
check_conflict

# โ๏ธ ุชูููุฐ ุนูููุฉ ุงูุชูููุฏ
bash generate.sh

# ๐ค ุฏูุน ุงูุชุบููุฑุงุช ุชููุงุฆููุง ุฅุฐุง ูุฌุฏุช
if check_changes; then
    git add .
    git commit -m "๐ฆ ุชุญุฏูุซ ุชููุงุฆู ูู dreem_boot"
    git push origin "$branch"

    echo "$(date '+%Y-%m-%d %H:%M:%S') | ุชู ุฏูุน '$branch' ุจูุฌุงุญ" >> push.log
    echo "[โ] ุงูุชุญุฏูุซ ูุงูุฏูุน ุชู ุจูุฌุงุญ!"
else
    echo "[๐ซ] ูุง ุชูุฌุฏ ุชุบููุฑุงุช ุชุณุชุญู ุงูุฏูุน."
fi
